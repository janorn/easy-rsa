#!/bin/sh

# Build a new PKI which is rooted on an intermediate certificate generated
# by ./build-inter or ./pkitool --inter from this PKI.  The new PKI should
# have independent vars settings, and must use a different KEY_DIR directory
# from the parent.  This tool can be used to generate arbitrary depth
# certificate chains.
#
# To build an intermediate CA, follow the same steps for a regular PKI but
# replace ./build-key or ./pkitool --initca with this script.

# The EXPORT_CA file will contain the CA certificate chain and should be
# referenced by the OpenVPN "ca" directive in config files.  The ca.crt file
# will only contain the local intermediate CA -- it's needed by the easy-rsa
# scripts but not by OpenVPN directly.
EXPORT_CA="export-ca.crt"

if [ $# -ne 2 ]; then
    echo "usage: $0 <intermediate-key-dir> <common-name>"
    echo "intermediate-key-dir: the KEY_DIR directory of the new intermediate PKI"
    echo "common-name: the common name of the intermediate certificate in this PKI"
    exit 1;
fi

if [ ! -d "$1" ]; then
	echo "The export key dir '$1' does not exist!"
	echo "Please create it and reissue the command"
	exit 1;
fi

if [ "$KEY_DIR" ]; then
    cp "$KEY_DIR/$2.crt" "$1/ca.crt"
    # If this intermediate was setup with a CSR file ignore the key
    if [ -f "$KEY_DIR/$2.key" ]; then
	   cp "$KEY_DIR/$2.key" "$1/ca.key"
    else
	   echo "No key file! Assuming this cert was issued using a csr file"
    fi

    if [ -e "$KEY_DIR/$EXPORT_CA" ]; then
        PARENT_CA="$KEY_DIR/$EXPORT_CA"
    else
        PARENT_CA="$KEY_DIR/ca.crt"
    fi
    cp "$PARENT_CA" "$1/$EXPORT_CA"
    cat "$1/ca.crt" >> "$1/$EXPORT_CA"
    echo "Please transfer the KEY_DIR=$1 to the appropriate location"
else
    echo 'Please source the vars script first (i.e. "source ./vars")'
    echo 'Make sure you have edited it to reflect your configuration.'
fi
